/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    companies: Company;
    jobOffers: JobOffer;
    managers: Manager;
    media: Media;
    pages: Page;
    users: User;
    translations: Translation;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    companies: CompaniesSelect<false> | CompaniesSelect<true>;
    jobOffers: JobOffersSelect<false> | JobOffersSelect<true>;
    managers: ManagersSelect<false> | ManagersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    translations: TranslationsSelect<false> | TranslationsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "companies".
 */
export interface Company {
  id: string;
  /**
   * Visible au public
   */
  name: string;
  general: {
    legalName: string;
    /**
     * Visible au public
     */
    tva: string;
    code?: string | null;
    /**
     * Visible au public
     */
    website?: string | null;
    /**
     * Visible au public
     */
    description?: string | null;
  };
  address: {
    street: string;
    number: string;
    postcode: string;
    city: string;
  };
  validated?: boolean | null;
  validationNotice?: string | null;
  validationDate?: string | null;
  blocked?: boolean | null;
  blockReasons?:
    | {
        reason?: string | null;
        date?: string | null;
        id?: string | null;
      }[]
    | null;
  contactPrivate?: {
    recruiters?: (string | Manager)[] | null;
    phone?: string | null;
    email?: string | null;
    googleLink?: string | null;
    privateNotes?:
      | {
          note?: string | null;
          date?: string | null;
          addedBy?: (string | null) | User;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "managers".
 */
export interface Manager {
  id: string;
  firstName: string;
  lastName: string;
  /**
   * Visible au public
   */
  email: string;
  /**
   * Visible au public
   */
  phonePublic?: string | null;
  active?: boolean | null;
  blocked?: boolean | null;
  privateNotes?:
    | {
        note?: string | null;
        date?: string | null;
        addedBy?: (string | null) | User;
        id?: string | null;
      }[]
    | null;
  contactPrivate: {
    company: string | Company;
    function: string;
    /**
     * Que pour les contacts internes
     */
    phonePrivate?: string | null;
    emailPublic?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jobOffers".
 */
export interface JobOffer {
  id: string;
  company: string | Company;
  location?: {
    address?: string | null;
    postcode?: string | null;
    city?: string | null;
  };
  title: string;
  modeOfWork?: ('on-site' | 'hybrid' | 'remote') | null;
  occupancy?: {
    min?: number | null;
    max?: number | null;
  };
  salary?: {
    min?: number | null;
    max?: number | null;
    class?: number | null;
    classLink?: string | null;
  };
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  requirements?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  requirementsPlus?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  hiringSteps?:
    | {
        stepName?: string | null;
        dueDate?: string | null;
        completed?: boolean | null;
        comments?: string | null;
        id?: string | null;
      }[]
    | null;
  manager: string | Manager;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  slug?: string | null;
  template?: 'default' | null;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Données pour <head> et les réseaux sociaux.
   */
  seo?: {
    metaTitle?: string | null;
    metaDescription?: string | null;
    ogImage?: (string | null) | Media;
  };
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Clé unique + valeurs par langue.  Modifiable depuis le back-office.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "translations".
 */
export interface Translation {
  id: string;
  key: string;
  fr: string;
  en?: string | null;
  de?: string | null;
  it?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'companies';
        value: string | Company;
      } | null)
    | ({
        relationTo: 'jobOffers';
        value: string | JobOffer;
      } | null)
    | ({
        relationTo: 'managers';
        value: string | Manager;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'translations';
        value: string | Translation;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "companies_select".
 */
export interface CompaniesSelect<T extends boolean = true> {
  name?: T;
  general?:
    | T
    | {
        legalName?: T;
        tva?: T;
        code?: T;
        website?: T;
        description?: T;
      };
  address?:
    | T
    | {
        street?: T;
        number?: T;
        postcode?: T;
        city?: T;
      };
  validated?: T;
  validationNotice?: T;
  validationDate?: T;
  blocked?: T;
  blockReasons?:
    | T
    | {
        reason?: T;
        date?: T;
        id?: T;
      };
  contactPrivate?:
    | T
    | {
        recruiters?: T;
        phone?: T;
        email?: T;
        googleLink?: T;
        privateNotes?:
          | T
          | {
              note?: T;
              date?: T;
              addedBy?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jobOffers_select".
 */
export interface JobOffersSelect<T extends boolean = true> {
  company?: T;
  location?:
    | T
    | {
        address?: T;
        postcode?: T;
        city?: T;
      };
  title?: T;
  modeOfWork?: T;
  occupancy?:
    | T
    | {
        min?: T;
        max?: T;
      };
  salary?:
    | T
    | {
        min?: T;
        max?: T;
        class?: T;
        classLink?: T;
      };
  description?: T;
  requirements?: T;
  requirementsPlus?: T;
  hiringSteps?:
    | T
    | {
        stepName?: T;
        dueDate?: T;
        completed?: T;
        comments?: T;
        id?: T;
      };
  manager?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "managers_select".
 */
export interface ManagersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  email?: T;
  phonePublic?: T;
  active?: T;
  blocked?: T;
  privateNotes?:
    | T
    | {
        note?: T;
        date?: T;
        addedBy?: T;
        id?: T;
      };
  contactPrivate?:
    | T
    | {
        company?: T;
        function?: T;
        phonePrivate?: T;
        emailPublic?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  template?: T;
  content?: T;
  seo?:
    | T
    | {
        metaTitle?: T;
        metaDescription?: T;
        ogImage?: T;
      };
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "translations_select".
 */
export interface TranslationsSelect<T extends boolean = true> {
  key?: T;
  fr?: T;
  en?: T;
  de?: T;
  it?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}